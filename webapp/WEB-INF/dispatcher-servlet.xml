<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	xmlns:mvc="http://www.springframework.org/schema/mvc">
	
	<!--  AOP Auto Proxy -->
	<aop:aspectj-autoproxy />
	
	<!-- validator, conversionService, messageConverter를 자동으로 등록 -->
	<!-- @ResponseBody를 하면 message converter를 부른다! -> 설정은 따로 필요하다 -->
	<mvc:annotation-driven>
		<mvc:message-converters>

			<!-- string이 return했을 때 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>

			<!-- 객체가 return했을 때 -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
					</list>
				</property>
			</bean>


		</mvc:message-converters>

		<!-- argument resolver -->
		<mvc:argument-resolvers>
			<bean
				class="com.estsoft.jblog.resolver.AuthUserHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- servlet container ; default servlet handler -->
	<mvc:default-servlet-handler />

	<context:annotation-config />
	<context:component-scan base-package="com.estsoft.jblog" />
	<!-- 기본 뷰 리졸버 ; jstl view를 return 해준다 -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- Interceptors -->
	<mvc:interceptors>

		<mvc:interceptor>
			<mvc:mapping path="/user/login" />
			<bean class="com.estsoft.jblog.interceptor.AuthLoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/user/logout" />
			<bean class="com.estsoft.jblog.interceptor.AuthLogoutInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<!-- asset으로 들어오는 것은 빼겠다 -->
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/assets/**" />
			<bean class="com.estsoft.jblog.interceptor.AuthInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 멀티파트 리졸버 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- *중요* 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" />
		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<!-- property name="maxInMemorySize" value="52428800" / -->
		<!-- defaultEncoding -->
		<!-- file 넘길때는 encoding을 안하고 보내고 그냥 data만 utf-8로 바꿔줌 ; fileupload와 관련 없음 -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>
	<!-- MessageSource -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basenames"> <list> <value>messages/messages_ko</value> </list> 
		</property> </bean> -->

	<mvc:resources mapping="/product-images/**" location="file:/temp/" />

</beans>